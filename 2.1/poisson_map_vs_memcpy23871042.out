Running Poisson with N=100, method=0...
Running Poisson with N=200, method=0...
Running Poisson with N=300, method=0...
Running Poisson with N=400, method=0...
Running Poisson with N=500, method=0...
Running Poisson with N=100, method=1...
Running Poisson with N=200, method=1...
Running Poisson with N=300, method=1...
Running Poisson with N=400, method=1...
Running Poisson with N=500, method=1...
Running Poisson with N=100, method=2...
Running Poisson with N=200, method=2...
Running Poisson with N=300, method=2...
Running Poisson with N=400, method=2...
Running Poisson with N=500, method=2...
All experiments completed. Results saved to poisson_results.data

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 23871042: <poisson_map_vs_memcpy> in cluster <dcc> Done

Job <poisson_map_vs_memcpy> was submitted from host <n-62-11-46> by user <s212166> in cluster <dcc> at Fri Jan 24 09:34:42 2025
Job was executed on host(s) <32*n-62-12-89>, in queue <hpcintrogpu>, as user <s212166> in cluster <dcc> at Fri Jan 24 09:34:42 2025
</zhome/3d/9/163694> was used as the home directory.
</zhome/3d/9/163694/Documents/HighPerf/part2/2.1> was used as the working directory.
Started at Fri Jan 24 09:34:42 2025
Terminated at Fri Jan 24 09:43:54 2025
Results reported at Fri Jan 24 09:43:54 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash
# 02614 - High-Performance Computing, January 2024
# 
# batch script to run matmult on a dedicated GPU server in the hpcintrogpu
# queue
#
# Author: Bernd Dammann <bd@cc.dtu.dk>
#         Hans Henrik Brandenborg SÃ¸rensen <hhbs@dtu.dk>
#
#BSUB -J poisson_map_vs_memcpy
#BSUB -o poisson_map_vs_memcpy%J.out
#BSUB -q hpcintrogpu
#BSUB -n 32
#BSUB -R "rusage[mem=2048]"
#BSUB -W 00:15
#BSUB -R "span[hosts=1]"
#BSUB -gpu "num=1:mode=exclusive_process"

# Set OpenMP environment variables
export OMP_PROC_BIND=TRUE
export OMP_PLACES=cores

# Load NVIDIA HPC SDK
module load nvhpc/24.11

# Define output file
OUTPUT_FILE="poisson_results.data"

# Clear output file and add header
echo "Module Iterations GridSize ExecutionTime" > $OUTPUT_FILE

# Define grid sizes and methods
GRID_SIZES=(100 200 300 400 500)
METHODS=(0 1 2)  # 0 = OpenMP Map, 1 = OpenMP Target Memcpy, 2 = CPU

# Run experiments
for method in "${METHODS[@]}"; do
    for N in "${GRID_SIZES[@]}"; do
        echo "Running Poisson with N=$N, method=$method..."
        START_TIME=$(date +%s.%N)
        ITERATIONS=400  # Fixed number of iterations
        EXEC_TIME=$(./poisson $N $ITERATIONS $method | grep "Jacobi Offload Execution Time" | awk '{print $5}')
        END_TIME=$(date +%s.%N)
        
        # Save results to file
        echo "$method $ITERATIONS $N $EXEC_TIME" >> $OUTPUT_FILE
    done
done

echo "All experiments completed. Results saved to $OUTPUT_FILE"
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   582.00 sec.
    Max Memory :                                 45 MB
    Average Memory :                             39.67 MB
    Total Requested Memory :                     65536.00 MB
    Delta Memory :                               65491.00 MB
    Max Swap :                                   -
    Max Processes :                              7
    Max Threads :                                12
    Run time :                                   630 sec.
    Turnaround time :                            552 sec.

The output (if any) is above this job summary.

