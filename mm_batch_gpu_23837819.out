Testing mkn_offload with size 100...
tee: /dev/tty: No such device or address
Saved: mkn_offload, 100, 0.003947, .506713
Testing mkn_offload with size 200...
tee: /dev/tty: No such device or address
Saved: mkn_offload, 200, 0.001729, 9.253903
Testing mkn_offload with size 500...
tee: /dev/tty: No such device or address
Saved: mkn_offload, 500, 0.002823, 88.558271
Testing mkn_offload with size 1000...
tee: /dev/tty: No such device or address
Saved: mkn_offload, 1000, 0.014392, 138.966092
Testing mkn_offload with size 2000...
tee: /dev/tty: No such device or address
Saved: mkn_offload, 2000, 0.141687, 112.924968
Testing mkn_offload with size 5000...
tee: /dev/tty: No such device or address
Saved: mkn_offload, 5000, 1.657651, 150.815823
Testing mnk_offload with size 100...
tee: /dev/tty: No such device or address
Saved: mnk_offload, 100, 0.001969, 1.015744
Testing mnk_offload with size 200...
tee: /dev/tty: No such device or address
Saved: mnk_offload, 200, 0.005491, 2.913859
Testing mnk_offload with size 500...
tee: /dev/tty: No such device or address
Saved: mnk_offload, 500, 0.003958, 63.163213
Testing mnk_offload with size 1000...
tee: /dev/tty: No such device or address
Saved: mnk_offload, 1000, 0.004506, 443.852640
Testing mnk_offload with size 2000...
tee: /dev/tty: No such device or address
Saved: mnk_offload, 2000, 0.024466, 653.968772
Testing mnk_offload with size 5000...
tee: /dev/tty: No such device or address
Saved: mnk_offload, 5000, 0.432074, 578.604590
Testing asy_offload with size 100...
tee: /dev/tty: No such device or address
Saved: asy_offload, 100, 0.015593, .128262
Testing asy_offload with size 200...
tee: /dev/tty: No such device or address
Saved: asy_offload, 200, 0.009892, 1.617468
Testing asy_offload with size 500...
tee: /dev/tty: No such device or address
Saved: asy_offload, 500, 0.016556, 15.100265
Testing asy_offload with size 1000...
tee: /dev/tty: No such device or address
Saved: asy_offload, 1000, 0.018888, 105.887335
Testing asy_offload with size 2000...
tee: /dev/tty: No such device or address
Saved: asy_offload, 2000, 0.075292, 212.505976
Testing asy_offload with size 5000...
tee: /dev/tty: No such device or address
Saved: asy_offload, 5000, 1.357995, 184.094934
Results saved to offload_performance_results_gflops.csv

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 23837819: <mm_batch_gpu> in cluster <dcc> Done

Job <mm_batch_gpu> was submitted from host <n-62-12-81> by user <s230274> in cluster <dcc> at Thu Jan 23 11:12:52 2025
Job was executed on host(s) <32*n-62-12-88>, in queue <hpcintrogpu>, as user <s230274> in cluster <dcc> at Thu Jan 23 11:12:54 2025
</zhome/97/2/198344> was used as the home directory.
</zhome/97/2/198344/assignment_3/hpc_assignment3> was used as the working directory.
Started at Thu Jan 23 11:12:54 2025
Terminated at Thu Jan 23 11:14:45 2025
Results reported at Thu Jan 23 11:14:45 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash
# Batch script to test all offload methods and compute GFLOPS/s
# Batch script for profiling all matrix multiplication implementations using NSight Systems (NSYS) and Nsight Compute (NCU)

#BSUB -J mm_batch_gpu
#BSUB -o mm_batch_gpu_%J.out
#BSUB -q hpcintrogpu
#BSUB -n 32
#BSUB -R "rusage[mem=2048]"
#BSUB -W 15
#BSUB -R "span[hosts=1]"
#BSUB -gpu "num=1:mode=exclusive_process"

# Define method names
METHODS="mkn_offload mnk_offload asy_offload"

# Define matrix sizes
SIZES="100 200 500 1000 2000 5000"

# Output file
RESULTS_FILE="offload_performance_results_gflops.csv"

# Clear old results
echo "Method, Size, Kernel (s), GFLOPS/s" > $RESULTS_FILE

# Load necessary modules (adjust if required)
module load nvhpc/24.11

# Run tests for each method and size
for METHOD in $METHODS; do
    for SIZE in $SIZES; do
        echo "Testing $METHOD with size $SIZE..."

        # Run executable and capture output
        OUTPUT=$(./matmult_c.nvc++ "$METHOD" "$SIZE" "$SIZE" "$SIZE" 2>&1 | tee /dev/tty)

        # Extract Kernel time
        RESULT_LINE=$(echo "$OUTPUT" | grep -m1 "$METHOD")

        KERNEL=$(echo "$RESULT_LINE" | awk -F', ' '{print $4}')

        # Check if Kernel time is empty or zero, if so, set to zero
        KERNEL=${KERNEL:-0}

        # Compute GFLOPS/s: (2 * m * n * k) / (Kernel Time * 10^9)
        if [[ "$KERNEL" == "0" || "$KERNEL" == "" ]]; then
            GFLOPS="0"
        else
            GFLOPS=$(echo "scale=6; (2 * $SIZE * $SIZE * $SIZE) / ($KERNEL * 10^9)" | bc)
        fi

(... more ...)
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   134.00 sec.
    Max Memory :                                 113 MB
    Average Memory :                             112.67 MB
    Total Requested Memory :                     65536.00 MB
    Delta Memory :                               65423.00 MB
    Max Swap :                                   -
    Max Processes :                              6
    Max Threads :                                11
    Run time :                                   228 sec.
    Turnaround time :                            113 sec.

The output (if any) is above this job summary.

