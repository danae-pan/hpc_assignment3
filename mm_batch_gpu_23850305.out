Testing BLOCK_SIZE=5...
"matmult.cpp", line 93: error: identifier "min" is undefined
  #pragma omp target teams distribute parallel for collapse(2) num_teams(min(256, m)) thread_limit(128)
                                                                         ^

"matmult.cpp", line 130: error: identifier "min" is undefined
  #pragma omp target teams distribute parallel for collapse(2) num_teams(min(256, m)) thread_limit(128)
                                                                         ^

"matmult.cpp", line 171: error: identifier "min" is undefined
          num_teams(min(m / _BLOCK_SIZE, 256)) thread_limit(128)
                    ^

"matmult.cpp", line 262: error: identifier "min" is undefined
      num_teams(min(m, 256)) thread_limit(128)                 \
                ^

4 errors detected in the compilation of "matmult.cpp".
Running blk_offload with size 100 and BLOCK_SIZE=5...
tee: /dev/tty: No such device or address
Saved: 5, 100, 0, 0, No
Running blk_offload with size 200 and BLOCK_SIZE=5...
tee: /dev/tty: No such device or address
Saved: 5, 200, 0, 0, No
Running blk_offload with size 500 and BLOCK_SIZE=5...
tee: /dev/tty: No such device or address
Saved: 5, 500, 0, 0, No
Running blk_offload with size 1000 and BLOCK_SIZE=5...
tee: /dev/tty: No such device or address
Saved: 5, 1000, 0, 0, No
Running blk_offload with size 2000 and BLOCK_SIZE=5...
tee: /dev/tty: No such device or address
Saved: 5, 2000, 0, 0, No
Running blk_offload with size 5000 and BLOCK_SIZE=5...
tee: /dev/tty: No such device or address
Saved: 5, 5000, 0, 0, No
Testing BLOCK_SIZE=15...
"matmult.cpp", line 93: error: identifier "min" is undefined
  #pragma omp target teams distribute parallel for collapse(2) num_teams(min(256, m)) thread_limit(128)
                                                                         ^

"matmult.cpp", line 130: error: identifier "min" is undefined
  #pragma omp target teams distribute parallel for collapse(2) num_teams(min(256, m)) thread_limit(128)
                                                                         ^

"matmult.cpp", line 171: error: identifier "min" is undefined
          num_teams(min(m / _BLOCK_SIZE, 256)) thread_limit(128)
                    ^

"matmult.cpp", line 262: error: identifier "min" is undefined
      num_teams(min(m, 256)) thread_limit(128)                 \
                ^

4 errors detected in the compilation of "matmult.cpp".
Running blk_offload with size 100 and BLOCK_SIZE=15...
tee: /dev/tty: No such device or address
Saved: 15, 100, 0, 0, No
Running blk_offload with size 200 and BLOCK_SIZE=15...
tee: /dev/tty: No such device or address
Saved: 15, 200, 0, 0, No
Running blk_offload with size 500 and BLOCK_SIZE=15...
tee: /dev/tty: No such device or address
Saved: 15, 500, 0, 0, No
Running blk_offload with size 1000 and BLOCK_SIZE=15...
tee: /dev/tty: No such device or address
Saved: 15, 1000, 0, 0, No
Running blk_offload with size 2000 and BLOCK_SIZE=15...
tee: /dev/tty: No such device or address
Saved: 15, 2000, 0, 0, No
Running blk_offload with size 5000 and BLOCK_SIZE=15...
tee: /dev/tty: No such device or address
Saved: 15, 5000, 0, 0, No
Testing BLOCK_SIZE=50...
"matmult.cpp", line 93: error: identifier "min" is undefined
  #pragma omp target teams distribute parallel for collapse(2) num_teams(min(256, m)) thread_limit(128)
                                                                         ^

"matmult.cpp", line 130: error: identifier "min" is undefined
  #pragma omp target teams distribute parallel for collapse(2) num_teams(min(256, m)) thread_limit(128)
                                                                         ^

"matmult.cpp", line 171: error: identifier "min" is undefined
          num_teams(min(m / _BLOCK_SIZE, 256)) thread_limit(128)
                    ^

"matmult.cpp", line 262: error: identifier "min" is undefined
      num_teams(min(m, 256)) thread_limit(128)                 \
                ^

4 errors detected in the compilation of "matmult.cpp".
Running blk_offload with size 100 and BLOCK_SIZE=50...
tee: /dev/tty: No such device or address
Saved: 50, 100, 0, 0, No
Running blk_offload with size 200 and BLOCK_SIZE=50...
tee: /dev/tty: No such device or address
Saved: 50, 200, 0, 0, No
Running blk_offload with size 500 and BLOCK_SIZE=50...
tee: /dev/tty: No such device or address
Saved: 50, 500, 0, 0, No
Running blk_offload with size 1000 and BLOCK_SIZE=50...
tee: /dev/tty: No such device or address
Saved: 50, 1000, 0, 0, No
Running blk_offload with size 2000 and BLOCK_SIZE=50...
tee: /dev/tty: No such device or address
Saved: 50, 2000, 0, 0, No
Running blk_offload with size 5000 and BLOCK_SIZE=50...
tee: /dev/tty: No such device or address
Saved: 50, 5000, 0, 0, No
Experiments completed! Results saved to block_size_performance.csv

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 23850305: <mm_batch_gpu> in cluster <dcc> Done

Job <mm_batch_gpu> was submitted from host <n-62-12-81> by user <s230274> in cluster <dcc> at Thu Jan 23 19:44:14 2025
Job was executed on host(s) <32*n-62-12-88>, in queue <hpcintrogpu>, as user <s230274> in cluster <dcc> at Thu Jan 23 19:44:16 2025
</zhome/97/2/198344> was used as the home directory.
</zhome/97/2/198344/assignment_3/hpc_assignment3> was used as the working directory.
Started at Thu Jan 23 19:44:16 2025
Terminated at Thu Jan 23 19:44:19 2025
Results reported at Thu Jan 23 19:44:19 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash

#BSUB -J mm_batch_gpu
#BSUB -o mm_batch_gpu_%J.out
#BSUB -q hpcintrogpu
#BSUB -n 32
#BSUB -R "rusage[mem=2048]"
#BSUB -W 15
#BSUB -R "span[hosts=1]"
#BSUB -gpu "num=1:mode=exclusive_process"

# Script to test different block sizes for blk_offload and check full unrolling

# Define block sizes to test
BLOCK_SIZES="5 15 50"

# Define matrix sizes
SIZES="100 200 500 1000 2000 5000"

# Output file
RESULTS_FILE="block_size_performance.csv"

# Ensure results file has a header
echo "Block Size, Size, Kernel (s), GFLOPS/s, Unrolled" > $RESULTS_FILE

# Load necessary modules (adjust for your HPC cluster)
module load nvhpc/24.11

for BLOCK in $BLOCK_SIZES; do
    echo "Testing BLOCK_SIZE=$BLOCK..."

    # Modify `_BLOCK_SIZE` in `matmult.cpp`
    sed -i "s/#define _BLOCK_SIZE .*/#define _BLOCK_SIZE $BLOCK/" matmult.cpp

    # Recompile with `-Minfo=all` to check unrolling
    nvc++ -fast -mp=gpu -Minfo=all matmult.cpp -o matmult 2>&1 | tee compiler_output.log

    # Check if the inner loop was fully unrolled
    UNROLLED=$(grep -q "Loop unrolled completely" compiler_output.log && echo "Yes" || echo "No")

    for SIZE in $SIZES; do
        echo "Running blk_offload with size $SIZE and BLOCK_SIZE=$BLOCK..."

        # Run executable and capture output
        OUTPUT=$(./matmult blk_offload "$SIZE" "$SIZE" "$SIZE" 2>&1 | tee /dev/tty)

        # Extract Kernel time from output
        RESULT_LINE=$(echo "$OUTPUT" | grep -E "^blk_offload,")

        KERNEL=$(echo "$RESULT_LINE" | awk -F', ' '{print $3}')

(... more ...)
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   2.00 sec.
    Max Memory :                                 13 MB
    Average Memory :                             6.33 MB
    Total Requested Memory :                     65536.00 MB
    Delta Memory :                               65523.00 MB
    Max Swap :                                   -
    Max Processes :                              1
    Max Threads :                                1
    Run time :                                   3 sec.
    Turnaround time :                            5 sec.

The output (if any) is above this job summary.

